@page "/logs"
@using Newtonsoft.Json
@inject Services.INetworkService _networkService

<PageTitle>Просматриваемые статьи</PageTitle>

<h3>Статистика</h3>

@if (ShowSpinner)
{
    <Spinner/>
}

@if (!ShowSpinner && LogsList.Count > 0)
{
    <div>
        <ol>
            @foreach (var logMessage in LogsList)
            {
                <li>
                    @logMessage.Key <span style="color: grey">(@logMessage.Value)</span>
                </li>
            }
        </ol>
    </div>
}

@code {
    private bool ShowSpinner { get; set; } = true;
    private Dictionary<string, string> LogsList { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await GetLogs();
    }

    private async Task GetLogs()
    {
        var response = await _networkService.GetResponse("https://logs-river.herokuapp.com/Logs");
        var responseList = JsonConvert.DeserializeObject<List<string>>(response) ?? Array.Empty<string>().ToList();

        if (responseList.Count > 0)
        {
            var groups = responseList.GroupBy(s => s).ToList();
            var groupingHeadings = groups
                .OrderByDescending(grouping => grouping.Count())
                .ToDictionary(grouping => grouping.Key, grouping => grouping.Count().ToString());

            LogsList = groupingHeadings;
            ShowSpinner = false;
        }
    }
}